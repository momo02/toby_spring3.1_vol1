<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<!-- old -->	
<!-- 	<bean id="userService" class="springbook.user.service.UserService">
		<property name="userDao" ref="userDao"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="mailSender" ref="mailSender"></property>
	</bean> -->
	
	<!-- new :: 클라이언트가 UserService라는 인터페이스를 통해 사용자 관리 로직을 이용하려고 할 때, 
		 먼저 트랜잭션을 담당하는 오브젝트(UserServiceTx)가 사용돼서 트랜잭션에 관련된 작업을 진행해주고,
		 실제 사용자 관리 로직을 담은 오브젝트(UserServiceImpl)가 이후에 호출돼서 비즈니스 로직에 관련된 작업을 수행하도록 만든다. -->
	<bean id="userService" class="springbook.user.service.UserServiceTx">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="userService" ref="userServiceImpl"></property>
	</bean> 
	
	<bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
		<property name="mailSender" ref="mailSender"></property>
	</bean> 
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- DataSourceTransactionManager는 dataSource 빈으로부터 Connection을 가져와 트랜잭션 처리를 해야하므로 dataSource프로퍼티를 갖는다. -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<!-- driverClass는 String타입이 아니라 java.lang.Class타입. 
		스프링이 프로퍼티 값을, 수정자(set)메소드의 파라미터 타입을 참고로 해서 적절한 형태로 변환해 준다.-->
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/toby_spring?characterEncoding=UTF-8"/>
		<property name="username" value="root"/>
		<property name="password" value="1234"/>
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.server.com"></property>
	</bean>
	
</beans>